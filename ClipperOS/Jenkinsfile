pipeline {
    agent any

    stages {
        stage('Setup Infisical') {
            steps {
                script {
                    withInfisical(
                        configuration: [
                            infisicalCredentialId: 'Infisical',
                            infisicalEnvironmentSlug: 'prod',
                            infisicalProjectSlug: 'devops',
                            infisicalUrl: 'https://app.infisical.com'
                        ],
                        infisicalSecrets: [
                            infisicalSecret(
                                includeImports: true,
                                path: '/',
                                secretValues: [
                                    [infisicalKey: 'POSTGRESDBLINK'],
                                    [infisicalKey: 'POSTGRESDBUSER'],
                                    [infisicalKey: 'POSTGRESDBPASS'],
                                    [infisicalKey: 'THIS_KEY_MIGHT_NOT_EXIST', isRequired: false]
                                ]
                            )
                        ]
                    ) {
                        echo "Secrets loaded from Infisical"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t clipperos:latest -f ClipperOS/Dockerfile ClipperOS'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Remove container existente, se houver
                    sh 'docker rm -f clipperos_container || true'

                    // Inicia novo container com vari√°veis de ambiente e mapeamento de porta correta
                    sh """
                        docker run -d \
                            -p 8088:8088 \
                            -e POSTGRESDBLINK="${env.POSTGRESDBLINK}" \
                            -e POSTGRESDBUSER="${env.POSTGRESDBUSER}" \
                            -e POSTGRESDBPASS="${env.POSTGRESDBPASS}" \
                            --name clipperos_container \
                            clipperos:latest
                    """
                }
            }
        }
    }
}
